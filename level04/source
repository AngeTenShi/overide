#include <stdio.h>
#include <string.h>
#include <sys/wait.h>
#include <sys/prctl.h>
#include <sys/ptrace.h>
#include <sys/reg.h>
#include <signal.h>
#include <unistd.h>

int main(int argc, const char **argv, const char **envp)
{
    int pid;
    char shellcode[128] = {0};
    int status = 0;
    int signal;
    int ptrace_result;

    pid = fork();
    if (pid)
    {
        int last_syscall;
        while (1)
        {
            int status;
            wait(&status);

            if (WIFEXITED(status) || WIFSIGNALED(status))
            {
                puts("child is exiting...");
                return 0;
            }

            if (ptrace(PTRACE_PEEKUSER, pid, 4 * ORIG_EAX, 0))
                break;
        }
        puts("no exec() for you");
        kill(pid, SIGKILL);
    }
    else
    {
        prctl(PR_SET_PDEATHSIG, SIGHUP);
        ptrace(PTRACE_TRACEME, 0, 0, 0);
        printf("Give me some shellcode, k\n");

        gets(shellcode);
    }
    return 0;
}
